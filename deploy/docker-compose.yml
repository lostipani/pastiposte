services:

  server-sim:
    profiles: [ 'simulation' ]
    build:
      context: ../
      dockerfile: build/server/Dockerfile
    networks:
      - local-network
    ports:
      - "12345:12345"
    environment:
      WS_PORT: 12345
      LOG_LEVEL: "INFO"
      SLEEP: 1
    healthcheck:
      test: [ "CMD-SHELL", "curl http://localhost:12345/healthcheck" ]
      interval: 30s
      timeout: 30s
      start_period: 10s
      retries: 3

  listener-ws-sim:
    profiles: [ 'simulation' ]
    build:
      context: ../
      dockerfile: build/listener/Dockerfile
    networks:
      - local-network
    environment:
      URL: "ws://server-sim:12345/ws"
      SLEEP: 0
      BROKER_HOST: "rabbitmq"
      BROKER_EXCHANGE: "exchange"
      BROKER_EXCHANGE_TYPE: "direct"
      BROKER_ROUTING_KEY: "simulation"
      LOG_LEVEL: "INFO"
    depends_on:
      rabbitmq:
        condition: service_healthy
      server-sim:
        condition: service_healthy

  consumer-sim:
    profiles: [ 'simulation' ]
    build:
      context: ../
      dockerfile: build/queue_logger/Dockerfile
    networks:
      - local-network
    environment:
      SLEEP: 0
      BROKER_HOST: "rabbitmq"
      BROKER_EXCHANGE: "exchange"
      BROKER_EXCHANGE_TYPE: "direct"
      BROKER_ROUTING_KEY: "simulation"
      LOG_LEVEL: "INFO"
    depends_on:
      rabbitmq:
        condition: service_healthy
      server-sim:
        condition: service_healthy

  rabbitmq:
    profiles: [ 'real-world', 'simulation' ]
    image: rabbitmq:4
    networks:
      - local-network
    ports:
      - "35672:5672"
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 30s
      start_period: 20s
      retries: 3

  listener-ws-1:
    profiles: [ 'real-world' ]
    build:
      context: ../
      dockerfile: build/listener/Dockerfile
    networks:
      - local-network
    environment:
      URL: "wss://stream.binance.com:9443/ws/btcusdc@trade"
      SLEEP: 0.1
      BROKER_HOST: "rabbitmq"
      BROKER_EXCHANGE: "exchange"
      BROKER_EXCHANGE_TYPE: "direct"
      BROKER_ROUTING_KEY: "trade"
      LOG_LEVEL: "INFO"
    depends_on:
      rabbitmq:
        condition: service_healthy

  listener-ws-2:
    profiles: [ 'real-world?' ]
    build:
      context: ../
      dockerfile: build/listener/Dockerfile
    networks:
      - local-network
    environment:
      URL: "wss://stream.binance.com:9443/ws/bnbusdc@kline_1m"
      SLEEP: 0.1
      BROKER_HOST: "rabbitmq"
      BROKER_EXCHANGE: "exchange"
      BROKER_EXCHANGE_TYPE: "direct"
      BROKER_ROUTING_KEY: "kline_1m"
      LOG_LEVEL: "INFO"
    depends_on:
      rabbitmq:
        condition: service_healthy

  listener-ws-sol:
    profiles: [ 'solana' ]
    build:
      context: ../
      dockerfile: build/listener/Dockerfile
    networks:
      - local-network
    environment:
      URL: "wss://stream.binance.com:9443/stream?streams=solusdt@kline_1m"
      SLEEP: 0
      BROKER_HOST: "rabbitmq"
      BROKER_EXCHANGE: "exchange"
      BROKER_EXCHANGE_TYPE: "direct"
      BROKER_ROUTING_KEY: "kline_sol_1m"
      LOG_LEVEL: "INFO"
    depends_on:
      rabbitmq:
        condition: service_healthy

  listener-http:
    profiles: [ 'real-world' ]
    build:
      context: ../
      dockerfile: build/listener/Dockerfile
    networks:
      - local-network
    environment:
      URL: "https://api.frankfurter.dev/v1/latest?base=USD"
      SLEEP: 1
      BROKER_HOST: "rabbitmq"
      BROKER_EXCHANGE: "exchange"
      BROKER_EXCHANGE_TYPE: "direct"
      BROKER_ROUTING_KEY: "frankfurter"
      LOG_LEVEL: "INFO"
    depends_on:
      rabbitmq:
        condition: service_healthy

  consumer-general:
    profiles: [ 'real-world' ]
    build:
      context: ../
      dockerfile: build/queue_logger/Dockerfile
    networks:
      - local-network
    environment:
      SLEEP: 0
      BROKER_HOST: "rabbitmq"
      BROKER_EXCHANGE: "exchange"
      BROKER_EXCHANGE_TYPE: "direct"
      BROKER_ROUTING_KEY: "trade, kline_1m, frankfurter"
      LOG_LEVEL: "INFO"
    depends_on:
      rabbitmq:
        condition: service_healthy

  consumer-sol:
    profiles: [ 'solana' ]
    build:
      context: ../
      dockerfile: build/analyst/Dockerfile
    networks:
      - local-network
    environment:
      SLEEP: 0
      BROKER_HOST: "rabbitmq"
      BROKER_EXCHANGE: "exchange"
      BROKER_EXCHANGE_TYPE: "direct"
      BROKER_ROUTING_KEY: "kline_sol_1m"
      LOG_LEVEL: "INFO"
    depends_on:
      rabbitmq:
        condition: service_healthy

networks:
  local-network:
    driver: bridge
